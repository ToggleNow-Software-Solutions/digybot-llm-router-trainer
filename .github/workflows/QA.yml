name: Pylint

on:
  pull_request:
    branches:
      - main
    paths:
      - src/**
      - .github/workflows/**

concurrency:
  # cancel any running action on new push
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Code Linting (Pylint + Ruff + Black)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run Pylint
        run: pylint $(git ls-files '*.py')

      - name: Run Black check (code formatting)
        run: black --check src/ tests/

      - name: Run Ruff (linter + autofix checker)
        run: ruff check src/ tests/

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run tests with coverage
        run: |
          pytest --cov=src --cov-report=term-missing

  typecheck:
    name: Static Type Checking (mypy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run mypy
        run: mypy src/ tests/

  license:
    name: License Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan for license headers
        run: |
          missing=$(grep -L "SPDX-License-Identifier" $(git ls-files '*.py') || true)
          if [ -n "$missing" ]; then
            echo "‚ùå Missing license headers in:"
            echo "$missing"
            exit 1
          fi
